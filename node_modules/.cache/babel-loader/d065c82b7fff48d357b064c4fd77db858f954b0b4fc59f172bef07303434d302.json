{"ast":null,"code":"var _jsxFileName = \"/Users/sachinkeshav/Documents/real-estate/Project-Livekit/frontend-livekit/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Room, createLocalAudioTrack, Track } from 'livekit-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [room, setRoom] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  useEffect(() => {\n    if (!room) return;\n    const handleTrackSubscribed = (track, publication, participant) => {\n      console.log(`Track subscribed: ${track.kind}`);\n      if (track.kind === Track.Kind.Audio) {\n        setIsSpeaking(true);\n        const audioElement = track.attach();\n        document.body.appendChild(audioElement);\n        audioElement.onended = () => {\n          setIsSpeaking(false);\n          audioElement.remove();\n        };\n      }\n    };\n    const handleTrackUnsubscribed = (track, publication, participant) => {\n      console.log(`Track unsubscribed: ${track.kind}`);\n      if (track.kind === Track.Kind.Audio) {\n        track.detach().forEach(element => element.remove());\n        setIsSpeaking(false);\n      }\n    };\n    const handleDataReceived = (payload, participant, kind) => {\n      const message = new TextDecoder().decode(payload);\n      console.log(`Data message received from ${participant.identity}: ${message}`);\n      setChatMessages(prev => [...prev, {\n        sender: participant.identity,\n        text: message\n      }]);\n    };\n    room.on('trackSubscribed', (track, publication, participant) => {\n      console.log(`Track subscribed: ${track.kind}`);\n      if (track.kind === Track.Kind.Audio) {\n        // Start Speaking Indicator\n        setIsSpeaking(true);\n        const audioElement = track.attach();\n        document.body.appendChild(audioElement);\n\n        // Simulate a chat message from agent\n        setChatMessages(prev => [...prev, {\n          sender: participant.identity,\n          text: \"Agent is responding...\"\n        }]);\n\n        // Stop indicator when audio finishes playing (estimate)\n        audioElement.onended = () => {\n          setIsSpeaking(false);\n          audioElement.remove();\n        };\n      }\n    });\n    room.on('trackUnsubscribed', (track, publication, participant) => {\n      console.log(`Track unsubscribed: ${track.kind}`);\n      if (track.kind === Track.Kind.Audio) {\n        track.detach().forEach(element => element.remove());\n        setIsSpeaking(false);\n      }\n    });\n    return () => {\n      room.off('trackSubscribed', handleTrackSubscribed);\n      room.off('trackUnsubscribed', handleTrackUnsubscribed);\n      room.off('dataReceived', handleDataReceived);\n    };\n  }, [room]);\n  const connectToRoom = async () => {\n    try {\n      // const resp = await fetch(process.env.TOKEN_SERVER_URL);\n      const resp = await fetch(\"https://livekit-token-server-9v88.onrender.com/api/token?room=demo-room&user=guest-user\");\n      console.log(resp);\n      const data = await resp.json();\n      const token = data.token;\n      const newRoom = new Room();\n      await newRoom.connect(\"wss://mre-2-qwlub3b3.livekit.cloud\", token);\n      setRoom(newRoom);\n      setConnected(true);\n      const micTrack = await createLocalAudioTrack();\n      await newRoom.localParticipant.publishTrack(micTrack);\n      console.log('Connected and microphone publishing.');\n    } catch (err) {\n      console.error('Error connecting to LiveKit:', err);\n    }\n  };\n  const disconnectFromRoom = async () => {\n    if (room) {\n      await room.disconnect();\n      setConnected(false);\n      setRoom(null);\n      setChatMessages([]);\n      console.log('Disconnected.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '5%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LiveKit AI Agent Interaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), !connected ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectToRoom,\n      style: {\n        padding: '10px 20px',\n        fontSize: '18px'\n      },\n      children: \"Start Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: disconnectFromRoom,\n      style: {\n        padding: '10px 20px',\n        fontSize: '18px'\n      },\n      children: \"End Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), connected && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isSpeaking && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          fontWeight: 'bold',\n          fontSize: '20px',\n          color: 'green'\n        },\n        children: \"\\uD83D\\uDD0A Agent is speaking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px',\n          border: '1px solid gray',\n          borderRadius: '8px',\n          width: '400px',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          padding: '20px',\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxHeight: '300px',\n            overflowY: 'auto'\n          },\n          children: chatMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [msg.sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), \" \", msg.text]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tyUuDCPJ/iU/seM/bKzyzlXZ5H8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Room","createLocalAudioTrack","Track","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","room","setRoom","connected","setConnected","isSpeaking","setIsSpeaking","chatMessages","setChatMessages","handleTrackSubscribed","track","publication","participant","console","log","kind","Kind","Audio","audioElement","attach","document","body","appendChild","onended","remove","handleTrackUnsubscribed","detach","forEach","element","handleDataReceived","payload","message","TextDecoder","decode","identity","prev","sender","text","on","off","connectToRoom","resp","fetch","data","json","token","newRoom","connect","micTrack","localParticipant","publishTrack","err","error","disconnectFromRoom","disconnect","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","fontWeight","color","border","borderRadius","width","marginLeft","marginRight","maxHeight","overflowY","map","msg","idx","marginBottom","_c","$RefreshReg$"],"sources":["/Users/sachinkeshav/Documents/real-estate/Project-Livekit/frontend-livekit/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Room, createLocalAudioTrack, Track } from 'livekit-client';\n\nfunction App() {\n  const [room, setRoom] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n\n  useEffect(() => {\n    if (!room) return;\n\n    const handleTrackSubscribed = (track, publication, participant) => {\n      console.log(`Track subscribed: ${track.kind}`);\n  \n      if (track.kind === Track.Kind.Audio) {\n        setIsSpeaking(true);\n  \n        const audioElement = track.attach();\n        document.body.appendChild(audioElement);\n  \n        audioElement.onended = () => {\n          setIsSpeaking(false);\n          audioElement.remove();\n        };\n      }\n    };\n  \n    const handleTrackUnsubscribed = (track, publication, participant) => {\n      console.log(`Track unsubscribed: ${track.kind}`);\n  \n      if (track.kind === Track.Kind.Audio) {\n        track.detach().forEach((element) => element.remove());\n        setIsSpeaking(false);\n      }\n    };\n  \n    const handleDataReceived = (payload, participant, kind) => {\n      const message = new TextDecoder().decode(payload);\n      console.log(`Data message received from ${participant.identity}: ${message}`);\n  \n      setChatMessages(prev => [...prev, { sender: participant.identity, text: message }]);\n    };\n  \n  \n\n    room.on('trackSubscribed', (track, publication, participant) => {\n      console.log(`Track subscribed: ${track.kind}`);\n\n      if (track.kind === Track.Kind.Audio) {\n        // Start Speaking Indicator\n        setIsSpeaking(true);\n\n        const audioElement = track.attach();\n        document.body.appendChild(audioElement);\n\n        // Simulate a chat message from agent\n        setChatMessages(prev => [...prev, { sender: participant.identity, text: \"Agent is responding...\" }]);\n\n        // Stop indicator when audio finishes playing (estimate)\n        audioElement.onended = () => {\n          setIsSpeaking(false);\n          audioElement.remove();\n        };\n      }\n    });\n\n    room.on('trackUnsubscribed', (track, publication, participant) => {\n      console.log(`Track unsubscribed: ${track.kind}`);\n\n      if (track.kind === Track.Kind.Audio) {\n        track.detach().forEach((element) => element.remove());\n        setIsSpeaking(false);\n      }\n    });\n\n    return () => {\n      room.off('trackSubscribed', handleTrackSubscribed);\n      room.off('trackUnsubscribed', handleTrackUnsubscribed);\n      room.off('dataReceived', handleDataReceived);\n    };\n  }, [room]);\n\n  const connectToRoom = async () => {\n    try {\n      // const resp = await fetch(process.env.TOKEN_SERVER_URL);\n      const resp = await fetch(\"https://livekit-token-server-9v88.onrender.com/api/token?room=demo-room&user=guest-user\");\n      console.log(resp)\n      const data = await resp.json();\n      const token = data.token;\n\n      const newRoom = new Room();\n      await newRoom.connect(\"wss://mre-2-qwlub3b3.livekit.cloud\", token);\n\n      setRoom(newRoom);\n      setConnected(true);\n\n      const micTrack = await createLocalAudioTrack();\n      await newRoom.localParticipant.publishTrack(micTrack);\n\n      console.log('Connected and microphone publishing.');\n    } catch (err) {\n      console.error('Error connecting to LiveKit:', err);\n    }\n  };\n\n  const disconnectFromRoom = async () => {\n    if (room) {\n      await room.disconnect();\n      setConnected(false);\n      setRoom(null);\n      setChatMessages([]);\n      console.log('Disconnected.');\n    }\n  };\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '5%' }}>\n      <h1>LiveKit AI Agent Interaction</h1>\n\n      {!connected ? (\n        <button onClick={connectToRoom} style={{ padding: '10px 20px', fontSize: '18px' }}>\n          Start Call\n        </button>\n      ) : (\n        <button onClick={disconnectFromRoom} style={{ padding: '10px 20px', fontSize: '18px' }}>\n          End Call\n        </button>\n      )}\n\n      {connected && (\n        <>\n          {isSpeaking && (\n            <div style={{ marginTop: '20px', fontWeight: 'bold', fontSize: '20px', color: 'green' }}>\n              🔊 Agent is speaking...\n            </div>\n          )}\n\n          <div style={{\n            marginTop: '40px',\n            border: '1px solid gray',\n            borderRadius: '8px',\n            width: '400px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            padding: '20px',\n            textAlign: 'left'\n          }}>\n            <h3>Chat</h3>\n            <div style={{ maxHeight: '300px', overflowY: 'auto' }}>\n              {chatMessages.map((msg, idx) => (\n                <div key={idx} style={{ marginBottom: '10px' }}>\n                  <b>{msg.sender}:</b> {msg.text}\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}